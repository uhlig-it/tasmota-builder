jobs:
  - name: publish-registry-image
    plan:
      - get: platformio-release
        trigger: true
        params: { include_source_tarball: false }
      - load_var: platformio-version
        file: platformio-release/version
      - in_parallel:
        - get: lib
          trigger: false
        - get: oci-task-image
        - get: image-source
          trigger: true
      - task: build-image
        privileged: true
        file: lib/tasks/oci/build-image.yml
        image: oci-task-image
        input_mapping: { source: image-source }
        params:
          CONTEXT: source
          BUILD_ARG_PLATFORM_IO_VERSION: ((.:platformio-version))
        output_mapping: { image: image }
      - load_var: image-source-version
        file: image-source/.git/describe_ref # populated by the git-resource
      - put: tasmota-builder-image
        params:
          image: image/image.tar
          version: ((.:image-source-version))
          bump_aliases: true
  - name: build-release
    plan:
      - in_parallel:
        - get: tasmota-release
          trigger: true
          params: { include_source_tarball: true }
        - get: lib
      - task: untar-tasmota-source
        file: lib/tasks/untar.yml
        input_mapping: { release: tasmota-release }
        output_mapping: { extracted: tasmota-source }
        params: { tarball: source.tar.gz }
      - get: tasmota-builder-image
        trigger: true
      - in_parallel:
        - do:
          - task: build-minimal
            image: tasmota-builder-image
            config:
              platform: linux
              inputs: [ name: tasmota-source ]
              params:
                PLATFORMIO_CORE_DIR: pio-core
                PLATFORMIO_BUILD_FLAGS: -DFIRMWARE_MINIMAL
              caches: [ path: pio-core ]
              outputs: [ name: firmware-minimal ]
              run:
                path: sh
                args:
                  - -c
                  - |
                    PLATFORMIO_CORE_DIR=$(readlink -f "$PLATFORMIO_CORE_DIR")
                    echo Now we have "$(pio --version)" with core_dir of size "$(du -hs $PLATFORMIO_CORE_DIR)"
                    pio run --environment tasmota --project-dir tasmota-source/arendst-Tasmota-*/
                    cp tasmota-source/arendst-Tasmota-*/.pio/build/tasmota/firmware.bin firmware-minimal
                    gzip -9 firmware-minimal/firmware.bin
          - put: firmware-minimal
            params:
              file: firmware-minimal/firmware.bin.gz
              acl: public-read # https://stackoverflow.com/a/74522101/1044029 and https://github.com/concourse/s3-resource?tab=readme-ov-file#plan
        - do:
          - task: build
            image: tasmota-builder-image
            config:
              platform: linux
              inputs: [ name: tasmota-source ]
              params:
                PLATFORMIO_CORE_DIR: pio-core
                PLATFORMIO_BUILD_FLAGS: -DUSE_PROMETHEUS
              caches: [ path: pio-core ]
              outputs: [ name: firmware ]
              run:
                path: sh
                args:
                  - -c
                  - |
                    PLATFORMIO_CORE_DIR=$(readlink -f "$PLATFORMIO_CORE_DIR")
                    echo Now we have "$(pio --version)" with core_dir of size "$(du -hs $PLATFORMIO_CORE_DIR)"
                    pio run --environment tasmota --project-dir tasmota-source/arendst-Tasmota-*/
                    cp tasmota-source/arendst-Tasmota-*/.pio/build/tasmota/firmware.bin firmware
                    gzip -9 firmware/firmware.bin
          - put: firmware
            params:
              file: firmware/firmware.bin.gz
              acl: public-read # https://stackoverflow.com/a/74522101/1044029 and https://github.com/concourse/s3-resource?tab=readme-ov-file#plan
      # TODO Send a notification once we build on new Tasmota releases only
resources:
  - name: lib
    type: git
    icon: file-tree
    source: &github
      uri: git@github.com:suhlig/concourse-task-library.git
      private_key: ((secrets.github.ssh_key))
  - name: image-source
    type: git
    icon: github
    source:
      <<: *github
      uri: git@github.com:uhlig-it/tasmota-builder.git
  - name: platformio-release
    type: github-release
    icon: package
    source: &github-release
      owner: platformio
      repository: platformio-core
      access_token: ((secrets.github.access_token))
      pre_release: true
  - name: tasmota-release
    type: github-release
    icon: package
    source:
      <<: *github-release
      owner: arendst
      repository: Tasmota
  - name: tasmota-builder-image
    type: registry-image
    icon: docker
    source: &dockerhub
      repository: uhligit/tasmota-builder
      username: ((secrets.dockerhub.username))
      password: ((secrets.dockerhub.authtoken))
      pre_releases: true
      debug: true
      tag: latest
  - name: oci-task-image
    type: registry-image
    icon: docker
    source:
      <<: *dockerhub
      repository: concourse/oci-build-task
  - name: firmware
    type: s3
    source: &s3
      bucket: uhlig-it-tasmota-builds
      versioned_file: tasmota.bin.gz
      access_key_id: ((secrets.b2.keyID))
      secret_access_key: ((secrets.b2.applicationKey))
      endpoint: s3.us-west-001.backblazeb2.com
  - name: firmware-minimal
    type: s3
    source:
      <<: *s3
      versioned_file: tasmota-minimal.bin.gz
